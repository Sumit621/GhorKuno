{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{BrowserRouter,Routes,Route}from\"react-router-dom\";import axios from\"axios\";import Home from\"./containers/Home\";import HomeWorker from\"./containers/HomeWorker\";import Login from\"./containers/LogInAndSignUp/Login\";import SignUp from\"./containers/LogInAndSignUp/SignUp\";import Activate from\"./containers/LogInAndSignUp/Activate\";import ResetPassword from\"./containers/LogInAndSignUp/ResetPassword\";import ResetPasswordConfirm from\"./containers/LogInAndSignUp/ResetPasswordConfirm\";import Layout from\"./hocs/Layout\";import{Provider}from\"react-redux\";import store from\"./store\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(_ref){var isAuthenticated=_ref.isAuthenticated,user=_ref.user;// const [userInfo, setUserInfo] = useState(state.auth.user);\n// const config = {\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n//     Accept: \"application/json\",\n//   },\n// };\n// useEffect(() => {\n//   axios\n//     .get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config)\n//     .then((res) => setUser(res.data))\n//     .then(console.log(user))\n//     .catch((error) => console.log(error));\n// }, [isAuthenticated]);\nreturn/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(SignUp,{})}),/*#__PURE__*/_jsx(Route,{path:\"/reset-password\",element:/*#__PURE__*/_jsx(ResetPassword,{})}),/*#__PURE__*/_jsx(Route,{path:\"/password/reset/confirm/:uid/:token\",element:/*#__PURE__*/_jsx(ResetPasswordConfirm,{})}),/*#__PURE__*/_jsx(Route,{path:\"/activate/:uid/:token\",element:/*#__PURE__*/_jsx(Activate,{})}),user.is_worker?/*#__PURE__*/_jsx(Route,{path:\"/home\",element:/*#__PURE__*/_jsx(Home,{})}):/*#__PURE__*/_jsx(Route,{path:\"/home-worker\",element:/*#__PURE__*/_jsx(HomeWorker,{})})]})})})});};var mapStateToProps=function mapStateToProps(state){return{user:state.auth.user};};export default connect(mapStateToProps,{user:user})(App);","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/WebProject/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Routes","Route","axios","Home","HomeWorker","Login","SignUp","Activate","ResetPassword","ResetPasswordConfirm","Layout","Provider","store","App","isAuthenticated","user","is_worker","mapStateToProps","state","auth","connect"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,aAAT,CAAwBC,MAAxB,CAAgCC,KAAhC,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mCAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oCAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sCAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,2CAA1B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kDAAjC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CAEA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAA+B,IAA5BC,CAAAA,eAA4B,MAA5BA,eAA4B,CAAXC,IAAW,MAAXA,IAAW,CACzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACE,KAAC,QAAD,EAAU,KAAK,CAAEH,KAAjB,uBACE,KAAC,aAAD,wBACE,KAAC,MAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,OAAO,cAAE,KAAC,KAAD,IAA9B,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,OAAO,cAAE,KAAC,MAAD,IAA/B,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,OAAO,cAAE,KAAC,aAAD,IAAvC,EAHF,cAIE,KAAC,KAAD,EACE,IAAI,CAAC,qCADP,CAEE,OAAO,cAAE,KAAC,oBAAD,IAFX,EAJF,cAQE,KAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,CAAoC,OAAO,cAAE,KAAC,QAAD,IAA7C,EARF,CASGG,IAAI,CAACC,SAAL,cACC,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,OAAO,cAAE,KAAC,IAAD,IAA7B,EADD,cAGC,KAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,CAA2B,OAAO,cAAE,KAAC,UAAD,IAApC,EAZJ,GADF,EADF,EADF,EADF,CAuBD,CAzCD,CA2CA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCH,IAAI,CAAEG,KAAK,CAACC,IAAN,CAAWJ,IADiB,CAAZ,EAAxB,CAIA,cAAeK,CAAAA,OAAO,CAACH,eAAD,CAAkB,CAAEF,IAAI,CAAJA,IAAF,CAAlB,CAAP,CAAmCF,GAAnC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Home from \"./containers/Home\";\nimport HomeWorker from \"./containers/HomeWorker\";\nimport Login from \"./containers/LogInAndSignUp/Login\";\nimport SignUp from \"./containers/LogInAndSignUp/SignUp\";\nimport Activate from \"./containers/LogInAndSignUp/Activate\";\nimport ResetPassword from \"./containers/LogInAndSignUp/ResetPassword\";\nimport ResetPasswordConfirm from \"./containers/LogInAndSignUp/ResetPasswordConfirm\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst App = ({ isAuthenticated, user }) => {\n  // const [userInfo, setUserInfo] = useState(state.auth.user);\n\n  // const config = {\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //     Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n  //     Accept: \"application/json\",\n  //   },\n  // };\n\n  // useEffect(() => {\n  //   axios\n  //     .get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config)\n  //     .then((res) => setUser(res.data))\n  //     .then(console.log(user))\n  //     .catch((error) => console.log(error));\n  // }, [isAuthenticated]);\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Layout>\n          <Routes>\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/signup\" element={<SignUp />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            <Route\n              path=\"/password/reset/confirm/:uid/:token\"\n              element={<ResetPasswordConfirm />}\n            />\n            <Route path=\"/activate/:uid/:token\" element={<Activate />} />\n            {user.is_worker ? (\n              <Route path=\"/home\" element={<Home />} />\n            ) : (\n              <Route path=\"/home-worker\" element={<HomeWorker />} />\n            )}\n          </Routes>\n        </Layout>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { user })(App);\n"]},"metadata":{},"sourceType":"module"}