{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\WebProject\\\\frontend\\\\src\\\\containers\\\\LogInAndSignUp\\\\ResetPasswordConfirm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password_confirm } from \"../../redux/actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordConfirm = _ref => {\n  _s();\n\n  let {\n    reset_password_confirm\n  } = _ref;\n  const [requestSent, setRequestSent] = useState(false);\n  const {\n    uid\n  } = useParams();\n  const {\n    token\n  } = useParams();\n  const [formData, setFormData] = useState({\n    new_password: \"\",\n    re_new_password: \"\"\n  });\n  const {\n    new_password,\n    re_new_password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    reset_password_confirm(uid, token, new_password, re_new_password);\n    setRequestSent(true);\n  };\n\n  if (requestSent) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"New Password\",\n          name: \"new_password\",\n          value: new_password,\n          onChange: e => onChange(e),\n          minLength: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          name: \"re_new_password\",\n          value: re_new_password,\n          onChange: e => onChange(e),\n          minLength: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordConfirm, \"aEZviiT36KQQGPyEDBehnBzVBMc=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = ResetPasswordConfirm;\nexport default connect(null, {\n  reset_password_confirm\n})(ResetPasswordConfirm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordConfirm\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/WebProject/frontend/src/containers/LogInAndSignUp/ResetPasswordConfirm.js"],"names":["React","useState","Navigate","useParams","connect","reset_password_confirm","ResetPasswordConfirm","requestSent","setRequestSent","uid","token","formData","setFormData","new_password","re_new_password","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,0BAAvC;;;AAEA,MAAMC,oBAAoB,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAED,IAAAA;AAAF,GAA+B;AAC3D,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUN,SAAS,EAAzB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYP,SAAS,EAA3B;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACvCY,IAAAA,YAAY,EAAE,EADyB;AAEvCC,IAAAA,eAAe,EAAE;AAFsB,GAAD,CAAxC;AAKA,QAAM;AAAED,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCH,QAA1C;;AAEA,QAAMI,QAAQ,GAAIC,CAAD,IACfJ,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CADb;;AAGA,QAAMC,QAAQ,GAAIJ,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAhB,IAAAA,sBAAsB,CAACI,GAAD,EAAMC,KAAN,EAAaG,YAAb,EAA2BC,eAA3B,CAAtB;AACAN,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GALD;;AAOA,MAAID,WAAJ,EAAiB;AACf,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAGS,CAAD,IAAOI,QAAQ,CAACJ,CAAD,CAA/B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,cAHd;AAIE,UAAA,IAAI,EAAC,cAJP;AAKE,UAAA,KAAK,EAAEH,YALT;AAME,UAAA,QAAQ,EAAGG,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAN3B;AAOE,UAAA,SAAS,EAAC,GAPZ;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,sBAHd;AAIE,UAAA,IAAI,EAAC,iBAJP;AAKE,UAAA,KAAK,EAAEF,eALT;AAME,UAAA,QAAQ,EAAGE,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAN3B;AAOE,UAAA,SAAS,EAAC,GAPZ;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF,eAyBE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA1DD;;GAAMV,oB;UAEYH,S,EACEA,S;;;KAHdG,oB;AA4DN,eAAeF,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA0CC,oBAA1C,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../../redux/actions/auth\";\r\n\r\nconst ResetPasswordConfirm = ({ reset_password_confirm }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const { uid } = useParams();\r\n  const { token } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n  });\r\n\r\n  const { new_password, re_new_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    reset_password_confirm(uid, token, new_password, re_new_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength=\"6\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm New Password\"\r\n            name=\"re_new_password\"\r\n            value={re_new_password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength=\"6\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n"]},"metadata":{},"sourceType":"module"}