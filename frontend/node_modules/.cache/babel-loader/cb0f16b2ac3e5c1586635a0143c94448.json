{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\WebProject\\\\frontend\\\\src\\\\containers\\\\LogInAndSignUp\\\\ResetPasswordConfirm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password_confirm } from \"../../redux/actions/auth\";\nimport { Form, Container, Row, Col, Button, Figure } from \"react-bootstrap\";\nimport ghorKuno_Combained from \"../../assets/ghorKuno_Combined.png\";\nimport otp_verify from \"../../assets/otp_verify.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordConfirm = _ref => {\n  _s();\n\n  let {\n    reset_password_confirm\n  } = _ref;\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  const [requestSent, setRequestSent] = useState(false);\n  const {\n    uid\n  } = useParams();\n  const {\n    token\n  } = useParams();\n  const [formData, setFormData] = useState({\n    new_password: \"\",\n    re_new_password: \"\"\n  });\n  const {\n    new_password,\n    re_new_password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    handleSubmit(e);\n    e.preventDefault();\n\n    if (new_password === re_new_password && new_password && re_new_password) {\n      reset_password_confirm(uid, token, new_password, re_new_password);\n      setRequestSent(true);\n    }\n  };\n\n  if (requestSent) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"border d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        position: \"absolute\",\n        top: \"60%\",\n        width: \"25%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Figure, {\n        className: \"text-center p-2\",\n        children: /*#__PURE__*/_jsxDEV(Figure.Image, {\n          width: 500,\n          alt: \"none\",\n          src: otp_verify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: e => onSubmit(e) // className=\"text-center mb-2\"\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Floating, {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \" rounded-3\",\n              type: \"password\",\n              placeholder: \"Password\",\n              name: \"new_password\",\n              value: new_password,\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"floatingPasswordCustom\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Floating, {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \" rounded-3\",\n              type: \"password\",\n              placeholder: \"Password\",\n              name: \"re_new_password\",\n              value: re_new_password,\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"floatingPasswordCustom\",\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          type: \"submit\",\n          className: \" rounded-3 text-white fw-bold fs-4\",\n          style: {\n            // height: \"30%\",\n            width: \"100%\"\n          },\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this) // <div className=\"container mt-5\">\n  //   <form onSubmit={(e) => onSubmit(e)}>\n  //     <div className=\"form-group\">\n  //       <input\n  //         className=\"form-control\"\n  //         type=\"password\"\n  //         placeholder=\"New Password\"\n  //         name=\"new_password\"\n  //         value={new_password}\n  //         onChange={(e) => onChange(e)}\n  //         minLength=\"6\"\n  //         required\n  //       />\n  //     </div>\n  //     <div className=\"form-group\">\n  //       <input\n  //         className=\"form-control\"\n  //         type=\"password\"\n  //         placeholder=\"Confirm New Password\"\n  //         name=\"re_new_password\"\n  //         value={re_new_password}\n  //         onChange={(e) => onChange(e)}\n  //         minLength=\"6\"\n  //         required\n  //       />\n  //     </div>\n  //     <button className=\"btn btn-primary\" type=\"submit\">\n  //       Reset Password\n  //     </button>\n  //   </form>\n  // </div>\n  ;\n};\n\n_s(ResetPasswordConfirm, \"/qwarNITst3uuM3/srNuH0+uFns=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = ResetPasswordConfirm;\nexport default connect(null, {\n  reset_password_confirm\n})(ResetPasswordConfirm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordConfirm\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/WebProject/frontend/src/containers/LogInAndSignUp/ResetPasswordConfirm.js"],"names":["React","useState","Navigate","useParams","connect","reset_password_confirm","Form","Container","Row","Col","Button","Figure","ghorKuno_Combained","otp_verify","ResetPasswordConfirm","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","requestSent","setRequestSent","uid","token","formData","setFormData","new_password","re_new_password","onChange","e","target","name","value","onSubmit","position","top","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../../redux/actions/auth\";\r\nimport { Form, Container, Row, Col, Button, Figure } from \"react-bootstrap\";\r\n\r\nimport ghorKuno_Combained from \"../../assets/ghorKuno_Combined.png\";\r\nimport otp_verify from \"../../assets/otp_verify.svg\";\r\n\r\nconst ResetPasswordConfirm = ({ reset_password_confirm }) => {\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const { uid } = useParams();\r\n  const { token } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n  });\r\n\r\n  const { new_password, re_new_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    handleSubmit(e);\r\n    e.preventDefault();\r\n\r\n    if (new_password === re_new_password && new_password && re_new_password) {\r\n      reset_password_confirm(uid, token, new_password, re_new_password);\r\n      setRequestSent(true);\r\n    }\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"border d-flex justify-content-center\">\r\n      <Row\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"60%\",\r\n          width: \"25%\",\r\n        }}\r\n      >\r\n        <Figure className=\"text-center p-2\">\r\n          <Figure.Image width={500} alt=\"none\" src={otp_verify} />\r\n        </Figure>\r\n        <Form\r\n          noValidate\r\n          validated={validated}\r\n          onSubmit={(e) => onSubmit(e)}\r\n          // className=\"text-center mb-2\"\r\n        >\r\n          <Form.Group>\r\n            <Form.Floating className=\"mb-2\">\r\n              <Form.Control\r\n                className=\" rounded-3\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"new_password\"\r\n                value={new_password}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <label htmlFor=\"floatingPasswordCustom\">New Password</label>\r\n            </Form.Floating>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Floating className=\"mb-2\">\r\n              <Form.Control\r\n                className=\" rounded-3\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"re_new_password\"\r\n                value={re_new_password}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <label htmlFor=\"floatingPasswordCustom\">\r\n                Confirm New Password\r\n              </label>\r\n            </Form.Floating>\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"danger\"\r\n            type=\"submit\"\r\n            className=\" rounded-3 text-white fw-bold fs-4\"\r\n            style={{\r\n              // height: \"30%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Form>\r\n      </Row>\r\n    </Container>\r\n    // <div className=\"container mt-5\">\r\n    //   <form onSubmit={(e) => onSubmit(e)}>\r\n    //     <div className=\"form-group\">\r\n    //       <input\r\n    //         className=\"form-control\"\r\n    //         type=\"password\"\r\n    //         placeholder=\"New Password\"\r\n    //         name=\"new_password\"\r\n    //         value={new_password}\r\n    //         onChange={(e) => onChange(e)}\r\n    //         minLength=\"6\"\r\n    //         required\r\n    //       />\r\n    //     </div>\r\n    //     <div className=\"form-group\">\r\n    //       <input\r\n    //         className=\"form-control\"\r\n    //         type=\"password\"\r\n    //         placeholder=\"Confirm New Password\"\r\n    //         name=\"re_new_password\"\r\n    //         value={re_new_password}\r\n    //         onChange={(e) => onChange(e)}\r\n    //         minLength=\"6\"\r\n    //         required\r\n    //       />\r\n    //     </div>\r\n    //     <button className=\"btn btn-primary\" type=\"submit\">\r\n    //       Reset Password\r\n    //     </button>\r\n    //   </form>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n"]},"metadata":{},"sourceType":"module"}