{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\WebProject\\\\frontend\\\\src\\\\components\\\\UserInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Navigate, useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ResetPassword from \"../containers/LogInAndSignUp/ResetPassword\";\nimport { Form, Container, Row, Col, Button, Figure } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = _ref => {\n  _s();\n\n  let {\n    isAuthenticated\n  } = _ref;\n  const [user, setUser] = useState([]);\n  const [userDataEdit, setUserDataEdit] = useState([]);\n  const navigate = useNavigate();\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n      Accept: \"application/json\"\n    }\n  };\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config).then(res => setUser(res => res.data)).catch(error => console.log(error));\n  }, [isAuthenticated]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/accounts/users/`, config).then(res => setUserDataEdit(res => res.data)).catch(error => console.log(error));\n  }, []);\n  console.table(userDataEdit);\n\n  const reset_password_btn_click = () => {\n    navigate(\"/reset-password\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [user.id === userDataEdit.id && userDataEdit.is_worker ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User is worker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User is not worker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"First name: \", user.id === userDataEdit.id && userDataEdit.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Last name: \", userDataEdit.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), userDataEdit.is_staff ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User is staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User is not staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Last login:\", userDataEdit.last_login]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: reset_password_btn_click,\n      children: \"Reset your password here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserInfo, \"Gyjrr/QSfUDchxXw6csWVKFBy94=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/WebProject/frontend/src/components/UserInfo.js"],"names":["React","useState","useEffect","Link","Navigate","useLocation","useNavigate","axios","ResetPassword","Form","Container","Row","Col","Button","Figure","UserInfo","isAuthenticated","user","setUser","userDataEdit","setUserDataEdit","navigate","config","headers","Authorization","localStorage","getItem","Accept","get","process","env","REACT_APP_API_URL","then","res","data","catch","error","console","log","table","reset_password_btn_click","id","is_worker","first_name","last_name","is_staff","last_login"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, Navigate, useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ResetPassword from \"../containers/LogInAndSignUp/ResetPassword\";\r\nimport { Form, Container, Row, Col, Button, Figure } from \"react-bootstrap\";\r\n\r\nconst UserInfo = ({ isAuthenticated }) => {\r\n  const [user, setUser] = useState([]);\r\n  const [userDataEdit, setUserDataEdit] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n      Accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config)\r\n      .then((res) => setUser((res) => res.data))\r\n      .catch((error) => console.log(error));\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}/accounts/users/`, config)\r\n      .then((res) => setUserDataEdit((res) => res.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  console.table(userDataEdit);\r\n\r\n  const reset_password_btn_click = () => {\r\n    navigate(\"/reset-password\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      {user.id === userDataEdit.id && userDataEdit.is_worker ? (\r\n        <h1>User is worker</h1>\r\n      ) : (\r\n        <h1>User is not worker</h1>\r\n      )}\r\n      <br /> <br /> <br />\r\n      <h1>\r\n        First name: {user.id === userDataEdit.id && userDataEdit.first_name}\r\n      </h1>\r\n      <h1>Last name: {userDataEdit.last_name}</h1>\r\n      <br /> <br />\r\n      {userDataEdit.is_staff ? (\r\n        <h1>User is staff</h1>\r\n      ) : (\r\n        <h1>User is not staff</h1>\r\n      )}\r\n      <br /> <br />\r\n      <h1>Last login:{userDataEdit.last_login}</h1>\r\n      <Button onClick={reset_password_btn_click}>\r\n        Reset your password here\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n"]},"metadata":{},"sourceType":"module"}