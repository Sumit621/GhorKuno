{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\WebProject\\\\frontend\\\\src\\\\containers\\\\ItemReview.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport ApiService from \"../ApiService\";\nimport useUserInfo from \"../hocs/useUserInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ItemReview(props) {\n  _s();\n\n  const [itemReview, setItemReview] = useState([]);\n  const [isUpdateComment, setIsUpdateComment] = useState(false);\n  const [commentId, setCommentId] = useState();\n  const [itemID] = useState(props.itemId);\n  const [userID] = useUserInfo();\n  const [rating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  console.log(userID);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/gk/review/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\"\n      }\n    }).then(resp => resp.json()).then(resp => setItemReview(resp)).catch(error => console.log(error));\n  }, [props.itemId]);\n\n  const insertComment = () => {\n    if (!comment) {\n      return alert(\"Please post a comment.\");\n    } else {\n      return ApiService.InsertComment({\n        userID,\n        itemID,\n        rating,\n        comment\n      }).then(resp => setItemReview(...itemReview, resp)).then(window.location.reload(false)).then(setComment(\"\"));\n    }\n  };\n\n  const deleteComment = sr => {\n    const new_sr = itemReview.filter(my_sr => {\n      if (my_sr.id === sr.id) {\n        return false;\n      }\n\n      return true;\n    });\n    setItemReview(new_sr);\n  };\n\n  const deleteBtn = sr => {\n    ApiService.DeleteComment(sr.id).then(() => deleteComment(sr)).catch(error => console.log(error));\n  };\n\n  const updateBtn = sr => {\n    setIsUpdateComment(true);\n    setComment(sr.comment);\n    setCommentId(sr.id);\n  };\n\n  const updatedComment = sr => {\n    const new_sr = itemReview.map(my_sr => {\n      if (my_sr.id === sr.id) {\n        return sr;\n      } else {\n        return my_sr;\n      }\n    });\n    setItemReview(new_sr);\n  };\n\n  const userCommentUpdate = () => {\n    if (!comment) {\n      return alert(\"Please write something to update the comment.\");\n    } else {\n      return ApiService.UpdateComment(commentId, {\n        userID,\n        itemID,\n        rating,\n        comment\n      }).then(resp => updatedComment(resp)).then(setIsUpdateComment(false)).then(setComment(\"\")).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 10,\n        className: \"shadow-lg rounded-3 p-5\",\n        style: {\n          background: \"#c95f5f\"\n        },\n        children: [itemReview.filter(sd => sd.itemID === props.itemId).map(sr => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"shadow rounded-3 text-white p-3\",\n                style: {\n                  background: \"#bf3636\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: sr.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Time: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 27\n                    }, this), \" \", sr.timeStampUpdated[11], sr.timeStampUpdated[12], sr.timeStampUpdated[13], sr.timeStampUpdated[14], sr.timeStampUpdated[15], \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \" Date:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 53\n                    }, this), \" \", sr.timeStampUpdated[8], sr.timeStampUpdated[9], sr.timeStampUpdated[7], sr.timeStampUpdated[5], sr.timeStampUpdated[6], sr.timeStampUpdated[4], sr.timeStampUpdated[0], sr.timeStampUpdated[1], sr.timeStampUpdated[2], sr.timeStampUpdated[3]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this), sr.userID == userID.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary mx-auto\",\n                    onClick: () => updateBtn(sr),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 27\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteBtn(sr),\n                    className: \"btn btn-danger\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, sr.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shadow rounded-3 text-white p-3\",\n          style: {\n            background: \"#bf3636\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"pb-2 text-white fs-2\",\n            children: \"Comment Box \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"desc\",\n            rows: \"5\",\n            placeholder: \"Post Comment\",\n            style: {\n              width: \"100%\"\n            },\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), isUpdateComment ? /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col text-center text-white fw-2 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: userCommentUpdate,\n              className: \"btn btn-lg text-white fs-4 \",\n              style: {\n                background: \"#c95f5f\"\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col text-center text-white fw-2 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: insertComment,\n              className: \"btn btn-lg text-white fs-4 \",\n              style: {\n                background: \"#c95f5f\"\n              },\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemReview, \"ToK+/qWmbJ9Ob8Wv3EYSUUgYXLU=\", false, function () {\n  return [useUserInfo];\n});\n\n_c = ItemReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemReview\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/WebProject/frontend/src/containers/ItemReview.js"],"names":["useState","useEffect","Row","Col","ApiService","useUserInfo","ItemReview","props","itemReview","setItemReview","isUpdateComment","setIsUpdateComment","commentId","setCommentId","itemID","itemId","userID","rating","comment","setComment","console","log","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","localStorage","getItem","Accept","then","resp","json","catch","error","insertComment","alert","InsertComment","window","location","reload","deleteComment","sr","new_sr","filter","my_sr","id","deleteBtn","DeleteComment","updateBtn","updatedComment","map","userCommentUpdate","UpdateComment","background","sd","timeStampUpdated","width","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ApiService from \"../ApiService\";\r\nimport useUserInfo from \"../hocs/useUserInfo\";\r\n\r\nexport default function ItemReview(props) {\r\n  const [itemReview, setItemReview] = useState([]);\r\n\r\n  const [isUpdateComment, setIsUpdateComment] = useState(false);\r\n\r\n  const [commentId, setCommentId] = useState();\r\n  const [itemID] = useState(props.itemId);\r\n  const [userID] = useUserInfo();\r\n  const [rating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  console.log(userID);\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/gk/review/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((resp) => setItemReview(resp))\r\n      .catch((error) => console.log(error));\r\n  }, [props.itemId]);\r\n\r\n  const insertComment = () => {\r\n    if (!comment) {\r\n      return alert(\"Please post a comment.\");\r\n    } else {\r\n      return ApiService.InsertComment({\r\n        userID,\r\n        itemID,\r\n        rating,\r\n        comment,\r\n      })\r\n        .then((resp) => setItemReview(...itemReview, resp))\r\n        .then(window.location.reload(false))\r\n        .then(setComment(\"\"));\r\n    }\r\n  };\r\n\r\n  const deleteComment = (sr) => {\r\n    const new_sr = itemReview.filter((my_sr) => {\r\n      if (my_sr.id === sr.id) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    setItemReview(new_sr);\r\n  };\r\n\r\n  const deleteBtn = (sr) => {\r\n    ApiService.DeleteComment(sr.id)\r\n      .then(() => deleteComment(sr))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const updateBtn = (sr) => {\r\n    setIsUpdateComment(true);\r\n    setComment(sr.comment);\r\n    setCommentId(sr.id);\r\n  };\r\n\r\n  const updatedComment = (sr) => {\r\n    const new_sr = itemReview.map((my_sr) => {\r\n      if (my_sr.id === sr.id) {\r\n        return sr;\r\n      } else {\r\n        return my_sr;\r\n      }\r\n    });\r\n\r\n    setItemReview(new_sr);\r\n  };\r\n\r\n  const userCommentUpdate = () => {\r\n    if (!comment) {\r\n      return alert(\"Please write something to update the comment.\");\r\n    } else {\r\n      return ApiService.UpdateComment(commentId, {\r\n        userID,\r\n        itemID,\r\n        rating,\r\n        comment,\r\n      })\r\n        .then((resp) => updatedComment(resp))\r\n        .then(setIsUpdateComment(false))\r\n        .then(setComment(\"\"))\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col sm={1}></Col>\r\n        <Col\r\n          sm={10}\r\n          className=\"shadow-lg rounded-3 p-5\"\r\n          style={{\r\n            background: \"#c95f5f\",\r\n          }}\r\n        >\r\n          {itemReview\r\n            .filter((sd) => sd.itemID === props.itemId)\r\n            .map((sr) => {\r\n              return (\r\n                <div key={sr.id}>\r\n                  <div>\r\n                    <Row\r\n                      className=\"shadow rounded-3 text-white p-3\"\r\n                      style={{\r\n                        background: \"#bf3636\",\r\n                      }}\r\n                    >\r\n                      <p>\r\n                        {/* {sr.userId ? <UserInfo userId={sr.userId} /> : null} */}\r\n                        <h3>{sr.comment}</h3>\r\n                        <span>\r\n                          <strong>Time: </strong> {sr.timeStampUpdated[11]}\r\n                          {sr.timeStampUpdated[12]}\r\n                          {sr.timeStampUpdated[13]}\r\n                          {sr.timeStampUpdated[14]}\r\n                          {sr.timeStampUpdated[15]} <strong> Date:</strong>{\" \"}\r\n                          {sr.timeStampUpdated[8]}\r\n                          {sr.timeStampUpdated[9]}\r\n                          {sr.timeStampUpdated[7]}\r\n                          {sr.timeStampUpdated[5]}\r\n                          {sr.timeStampUpdated[6]}\r\n                          {sr.timeStampUpdated[4]}\r\n                          {sr.timeStampUpdated[0]}\r\n                          {sr.timeStampUpdated[1]}\r\n                          {sr.timeStampUpdated[2]}\r\n                          {sr.timeStampUpdated[3]}\r\n                        </span>\r\n                        <br />\r\n                      </p>\r\n\r\n                      <br />\r\n                      {sr.userID == userID.id ? (\r\n                        <div>\r\n                          <button\r\n                            className=\"btn btn-primary mx-auto\"\r\n                            onClick={() => updateBtn(sr)}\r\n                          >\r\n                            Update\r\n                          </button>{\" \"}\r\n                          <button\r\n                            onClick={() => deleteBtn(sr)}\r\n                            className=\"btn btn-danger\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      ) : null}\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <br />\r\n                    <br />\r\n                  </Row>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <div\r\n            className=\"shadow rounded-3 text-white p-3\"\r\n            style={{\r\n              background: \"#bf3636\",\r\n\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <label className=\"pb-2 text-white fs-2\">Comment Box </label>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"desc\"\r\n              rows=\"5\"\r\n              placeholder=\"Post Comment\"\r\n              style={{\r\n                width: \"100%\",\r\n              }}\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n            <br />\r\n            {isUpdateComment ? (\r\n              <div class=\"col text-center text-white fw-2 pb-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={userCommentUpdate}\r\n                  className=\"btn btn-lg text-white fs-4 \"\r\n                  style={{\r\n                    background: \"#c95f5f\",\r\n                  }}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div class=\"col text-center text-white fw-2 pb-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={insertComment}\r\n                  className=\"btn btn-lg text-white fs-4 \"\r\n                  style={{\r\n                    background: \"#c95f5f\",\r\n                  }}\r\n                >\r\n                  Post\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Col>\r\n        <Col sm={1}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}